// from AXIS

// ----------
// Typography
// ----------

// Mixin: Ellipsis
// Truncate text to the width of its container...
// ex: ellipsis()
// ex: ellipsis: 300px

ellipsis($width = 100%)
  white-space: nowrap
  display: inline-block
  max-width: $width
  overflow: hidden
  text-overflow: ellipsis
  word-wrap: normal


// Mixin: Link
//
// A nice default style for links. Accepts a color and a style. Color can be
// anything, style can be underline, darken, lighten, or glow, each giving it a
// different style of interaction when hovered. More suggestions here welcome.
//
// ex. link()
// ex. link: green
// ex. link: #57777E 'glow'

link($color = $default-color, $style = 'underline')
  color: $color
  text-decoration: none
  transition()

  if $style == 'underline'
    hover-underline()
    &:hover
      color: darken(@color, 15%)
  else if $style == 'darken'
    &:hover
      color: darken(@color, 20%)
  else if $style == 'lighten'
    hover-lighten()
  else if $style == 'glow'
    &:hover
      text-shadow: 0 0 7px rgba(@color, .6)

  &:visited
    opacity: .8

// Mixin: Reset Link
//
// Sometimes my link mixin of the browser defaults will give you questionable
// link defaults that you don't want on certain elements. This guy gets rid of
// that.

// ex. reset-link()

reset-link()
  border: none
  text-decoration: none
  color: initial

  &:hover
    border: none
    text-decoration: none
    color: initial

  &:visited
    opacity: 1

// Mixin: Text Selection
//
// This guy sets the text select color intelligently based on the
// highlight-color variable found in the settings file. If you really want, you
// can pass it a color override too.

// ex. text-selection()

text-selection($color = $highlight-color, $text-color = null)

  $text-color = (light($color) ? white : #494949) unless $text-color

  &::-moz-selection
    background: $color
    color: $text-color

  &::selection
    background: $color
    color: $text-color



base($fonts = $font-stack, $size = $font-size, $color = $font-color)
  html
    font-size: unit($size, 'px')
    font-size: unit(($size/16)*100, "%")

  body
    font-family: $fonts
    color: $color
    -webkit-font-smoothing: antialiased
    -webkit-text-size-adjust: 100%
    -ms-text-size-adjust: 100%
    font-size-adjust: auto


